{"version":3,"file":"bundle.js","sources":["../../node_modules/svelte/internal/index.mjs","../../node_modules/svelte/store/index.mjs","../../node_modules/svelte/motion/index.mjs","../../src/stores.ts","../../src/scripts/helpers.ts","../../src/scripts/input-management.ts","../../src/scripts/selection-management.ts","../../src/core/BoxSelection.svelte","../../src/core/Selection.svelte","../../src/core/CanvasItem.svelte","../../src/core/Canvas.svelte","../../src/main.ts"],"sourcesContent":["function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\nfunction is_promise(value) {\n    return value && typeof value === 'object' && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction is_empty(obj) {\n    return Object.keys(obj).length === 0;\n}\nfunction validate_store(store, name) {\n    if (store != null && typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(store, ...callbacks) {\n    if (store == null) {\n        return noop;\n    }\n    const unsub = store.subscribe(...callbacks);\n    return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\nfunction get_store_value(store) {\n    let value;\n    subscribe(store, _ => value = _)();\n    return value;\n}\nfunction component_subscribe(component, store, callback) {\n    component.$$.on_destroy.push(subscribe(store, callback));\n}\nfunction create_slot(definition, ctx, $$scope, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n    return definition[1] && fn\n        ? assign($$scope.ctx.slice(), definition[1](fn(ctx)))\n        : $$scope.ctx;\n}\nfunction get_slot_changes(definition, $$scope, dirty, fn) {\n    if (definition[2] && fn) {\n        const lets = definition[2](fn(dirty));\n        if ($$scope.dirty === undefined) {\n            return lets;\n        }\n        if (typeof lets === 'object') {\n            const merged = [];\n            const len = Math.max($$scope.dirty.length, lets.length);\n            for (let i = 0; i < len; i += 1) {\n                merged[i] = $$scope.dirty[i] | lets[i];\n            }\n            return merged;\n        }\n        return $$scope.dirty | lets;\n    }\n    return $$scope.dirty;\n}\nfunction update_slot(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction update_slot_spread(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_spread_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_spread_changes_fn(dirty) | get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction compute_rest_props(props, keys) {\n    const rest = {};\n    keys = new Set(keys);\n    for (const k in props)\n        if (!keys.has(k) && k[0] !== '$')\n            rest[k] = props[k];\n    return rest;\n}\nfunction compute_slots(slots) {\n    const result = {};\n    for (const key in slots) {\n        result[key] = true;\n    }\n    return result;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\nfunction null_to_empty(value) {\n    return value == null ? '' : value;\n}\nfunction set_store_value(store, ret, value = ret) {\n    store.set(value);\n    return ret;\n}\nconst has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\nfunction action_destroyer(action_result) {\n    return action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nfunction run_tasks(now) {\n    tasks.forEach(task => {\n        if (!task.c(now)) {\n            tasks.delete(task);\n            task.f();\n        }\n    });\n    if (tasks.size !== 0)\n        raf(run_tasks);\n}\n/**\n * For testing purposes only!\n */\nfunction clear_loops() {\n    tasks.clear();\n}\n/**\n * Creates a new task that runs on each raf frame\n * until it returns a falsy value or is aborted\n */\nfunction loop(callback) {\n    let task;\n    if (tasks.size === 0)\n        raf(run_tasks);\n    return {\n        promise: new Promise(fulfill => {\n            tasks.add(task = { c: callback, f: fulfill });\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction detach(node) {\n    node.parentNode.removeChild(node);\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction element_is(name, is) {\n    return document.createElement(name, { is });\n}\nfunction object_without_properties(obj, exclude) {\n    const target = {};\n    for (const k in obj) {\n        if (has_prop(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction self(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.target === this)\n            fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else if (node.getAttribute(attribute) !== value)\n        node.setAttribute(attribute, value);\n}\nfunction set_attributes(node, attributes) {\n    // @ts-ignore\n    const descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n    for (const key in attributes) {\n        if (attributes[key] == null) {\n            node.removeAttribute(key);\n        }\n        else if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (key === '__value') {\n            node.value = node[key] = attributes[key];\n        }\n        else if (descriptors[key] && descriptors[key].set) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_svg_attributes(node, attributes) {\n    for (const key in attributes) {\n        attr(node, key, attributes[key]);\n    }\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group, __value, checked) {\n    const value = new Set();\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.add(group[i].__value);\n    }\n    if (!checked) {\n        value.delete(__value);\n    }\n    return Array.from(value);\n}\nfunction to_number(value) {\n    return value === '' ? null : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction claim_element(nodes, name, attributes, svg) {\n    for (let i = 0; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeName === name) {\n            let j = 0;\n            const remove = [];\n            while (j < node.attributes.length) {\n                const attribute = node.attributes[j++];\n                if (!attributes[attribute.name]) {\n                    remove.push(attribute.name);\n                }\n            }\n            for (let k = 0; k < remove.length; k++) {\n                node.removeAttribute(remove[k]);\n            }\n            return nodes.splice(i, 1)[0];\n        }\n    }\n    return svg ? svg_element(name) : element(name);\n}\nfunction claim_text(nodes, data) {\n    for (let i = 0; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 3) {\n            node.data = '' + data;\n            return nodes.splice(i, 1)[0];\n        }\n    }\n    return text(data);\n}\nfunction claim_space(nodes) {\n    return claim_text(nodes, ' ');\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.wholeText !== data)\n        text.data = data;\n}\nfunction set_input_value(input, value) {\n    input.value = value == null ? '' : value;\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value, important) {\n    node.style.setProperty(key, value, important ? 'important' : '');\n}\nfunction select_option(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked') || select.options[0];\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\n// unfortunately this can't be a constant as that wouldn't be tree-shakeable\n// so we cache the result instead\nlet crossorigin;\nfunction is_crossorigin() {\n    if (crossorigin === undefined) {\n        crossorigin = false;\n        try {\n            if (typeof window !== 'undefined' && window.parent) {\n                void window.parent.document;\n            }\n        }\n        catch (error) {\n            crossorigin = true;\n        }\n    }\n    return crossorigin;\n}\nfunction add_resize_listener(node, fn) {\n    const computed_style = getComputedStyle(node);\n    if (computed_style.position === 'static') {\n        node.style.position = 'relative';\n    }\n    const iframe = element('iframe');\n    iframe.setAttribute('style', 'display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; ' +\n        'overflow: hidden; border: 0; opacity: 0; pointer-events: none; z-index: -1;');\n    iframe.setAttribute('aria-hidden', 'true');\n    iframe.tabIndex = -1;\n    const crossorigin = is_crossorigin();\n    let unsubscribe;\n    if (crossorigin) {\n        iframe.src = \"data:text/html,<script>onresize=function(){parent.postMessage(0,'*')}</script>\";\n        unsubscribe = listen(window, 'message', (event) => {\n            if (event.source === iframe.contentWindow)\n                fn();\n        });\n    }\n    else {\n        iframe.src = 'about:blank';\n        iframe.onload = () => {\n            unsubscribe = listen(iframe.contentWindow, 'resize', fn);\n        };\n    }\n    append(node, iframe);\n    return () => {\n        if (crossorigin) {\n            unsubscribe();\n        }\n        else if (unsubscribe && iframe.contentWindow) {\n            unsubscribe();\n        }\n        detach(iframe);\n    };\n}\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, false, false, detail);\n    return e;\n}\nfunction query_selector_all(selector, parent = document.body) {\n    return Array.from(parent.querySelectorAll(selector));\n}\nclass HtmlTag {\n    constructor(anchor = null) {\n        this.a = anchor;\n        this.e = this.n = null;\n    }\n    m(html, target, anchor = null) {\n        if (!this.e) {\n            this.e = element(target.nodeName);\n            this.t = target;\n            this.h(html);\n        }\n        this.i(anchor);\n    }\n    h(html) {\n        this.e.innerHTML = html;\n        this.n = Array.from(this.e.childNodes);\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert(this.t, this.n[i], anchor);\n        }\n    }\n    p(html) {\n        this.d();\n        this.h(html);\n        this.i(this.a);\n    }\n    d() {\n        this.n.forEach(detach);\n    }\n}\nfunction attribute_to_object(attributes) {\n    const result = {};\n    for (const attribute of attributes) {\n        result[attribute.name] = attribute.value;\n    }\n    return result;\n}\nfunction get_custom_elements_slots(element) {\n    const result = {};\n    element.childNodes.forEach((node) => {\n        result[node.slot || 'default'] = true;\n    });\n    return result;\n}\n\nconst active_docs = new Set();\nlet active = 0;\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    const doc = node.ownerDocument;\n    active_docs.add(doc);\n    const stylesheet = doc.__svelte_stylesheet || (doc.__svelte_stylesheet = doc.head.appendChild(element('style')).sheet);\n    const current_rules = doc.__svelte_rules || (doc.__svelte_rules = {});\n    if (!current_rules[name]) {\n        current_rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ''}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    const previous = (node.style.animation || '').split(', ');\n    const next = previous.filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    );\n    const deleted = previous.length - next.length;\n    if (deleted) {\n        node.style.animation = next.join(', ');\n        active -= deleted;\n        if (!active)\n            clear_rules();\n    }\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        active_docs.forEach(doc => {\n            const stylesheet = doc.__svelte_stylesheet;\n            let i = stylesheet.cssRules.length;\n            while (i--)\n                stylesheet.deleteRule(i);\n            doc.__svelte_rules = {};\n        });\n        active_docs.clear();\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error('Function called outside component initialization');\n    return current_component;\n}\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\nfunction createEventDispatcher() {\n    const component = get_current_component();\n    return (type, detail) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail);\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n        }\n    };\n}\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n}\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\nfunction hasContext(key) {\n    return get_current_component().$$.context.has(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        callbacks.slice().forEach(fn => fn(event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nconst render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\nlet flushing = false;\nconst seen_callbacks = new Set();\nfunction flush() {\n    if (flushing)\n        return;\n    flushing = true;\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        for (let i = 0; i < dirty_components.length; i += 1) {\n            const component = dirty_components[i];\n            set_current_component(component);\n            update(component.$$);\n        }\n        set_current_component(null);\n        dirty_components.length = 0;\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n                callback();\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n    flushing = false;\n    seen_callbacks.clear();\n}\nfunction update($$) {\n    if ($$.fragment !== null) {\n        $$.update();\n        run_all($$.before_update);\n        const dirty = $$.dirty;\n        $$.dirty = [-1];\n        $$.fragment && $$.fragment.p($$.ctx, dirty);\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n}\nconst null_transition = { duration: 0 };\nfunction create_in_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config();\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config();\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    let config = fn(node, params);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = program.b - t;\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program || pending_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config();\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = value;\n        let child_ctx = info.ctx;\n        if (key !== undefined) {\n            child_ctx = child_ctx.slice();\n            child_ctx[key] = value;\n        }\n        const block = type && (info.current = type)(child_ctx);\n        let needs_flush = false;\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            if (info.blocks[i] === block) {\n                                info.blocks[i] = null;\n                            }\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            needs_flush = true;\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n        if (needs_flush) {\n            flush();\n        }\n    }\n    if (is_promise(promise)) {\n        const current_component = get_current_component();\n        promise.then(value => {\n            set_current_component(current_component);\n            update(info.then, 1, info.value, value);\n            set_current_component(null);\n        }, error => {\n            set_current_component(current_component);\n            update(info.catch, 2, info.error, error);\n            set_current_component(null);\n            if (!info.hasCatch) {\n                throw error;\n            }\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = promise;\n    }\n}\n\nconst globals = (typeof window !== 'undefined'\n    ? window\n    : typeof globalThis !== 'undefined'\n        ? globalThis\n        : global);\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, dirty, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            block.p(child_ctx, dirty);\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next);\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    return new_blocks;\n}\nfunction validate_each_keys(ctx, list, get_context, get_key) {\n    const keys = new Set();\n    for (let i = 0; i < list.length; i++) {\n        const key = get_key(get_context(ctx, list, i));\n        if (keys.has(key)) {\n            throw new Error('Cannot have duplicate keys in a keyed each');\n        }\n        keys.add(key);\n    }\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\nfunction get_spread_object(spread_props) {\n    return typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\n}\n\n// source: https://html.spec.whatwg.org/multipage/indices.html\nconst boolean_attributes = new Set([\n    'allowfullscreen',\n    'allowpaymentrequest',\n    'async',\n    'autofocus',\n    'autoplay',\n    'checked',\n    'controls',\n    'default',\n    'defer',\n    'disabled',\n    'formnovalidate',\n    'hidden',\n    'ismap',\n    'loop',\n    'multiple',\n    'muted',\n    'nomodule',\n    'novalidate',\n    'open',\n    'playsinline',\n    'readonly',\n    'required',\n    'reversed',\n    'selected'\n]);\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args, classes_to_add) {\n    const attributes = Object.assign({}, ...args);\n    if (classes_to_add) {\n        if (attributes.class == null) {\n            attributes.class = classes_to_add;\n        }\n        else {\n            attributes.class += ' ' + classes_to_add;\n        }\n    }\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === true)\n            str += ' ' + name;\n        else if (boolean_attributes.has(name.toLowerCase())) {\n            if (value)\n                str += ' ' + name;\n        }\n        else if (value != null) {\n            str += ` ${name}=\"${String(value).replace(/\"/g, '&#34;').replace(/'/g, '&#39;')}\"`;\n        }\n    });\n    return str;\n}\nconst escaped = {\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;'\n};\nfunction escape(html) {\n    return String(html).replace(/[\"'&<>]/g, match => escaped[match]);\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(parent_component ? parent_component.$$.context : []),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, options = {}) => {\n            on_destroy = [];\n            const result = { title: '', head: '', css: new Set() };\n            const html = $$render(result, props, {}, options);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.title + result.head\n            };\n        },\n        $$render\n    };\n}\nfunction add_attribute(name, value, boolean) {\n    if (value == null || (boolean && !value))\n        return '';\n    return ` ${name}${value === true ? '' : `=${typeof value === 'string' ? JSON.stringify(escape(value)) : `\"${value}\"`}`}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : '';\n}\n\nfunction bind(component, name, callback) {\n    const index = component.$$.props[name];\n    if (index !== undefined) {\n        component.$$.bound[index] = callback;\n        callback(component.$$.ctx[index]);\n    }\n}\nfunction create_component(block) {\n    block && block.c();\n}\nfunction claim_component(block, parent_nodes) {\n    block && block.l(parent_nodes);\n}\nfunction mount_component(component, target, anchor) {\n    const { fragment, on_mount, on_destroy, after_update } = component.$$;\n    fragment && fragment.m(target, anchor);\n    // onMount happens before the initial afterUpdate\n    add_render_callback(() => {\n        const new_on_destroy = on_mount.map(run).filter(is_function);\n        if (on_destroy) {\n            on_destroy.push(...new_on_destroy);\n        }\n        else {\n            // Edge case - component was destroyed immediately,\n            // most likely as a result of a binding initialising\n            run_all(new_on_destroy);\n        }\n        component.$$.on_mount = [];\n    });\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    const $$ = component.$$;\n    if ($$.fragment !== null) {\n        run_all($$.on_destroy);\n        $$.fragment && $$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        $$.on_destroy = $$.fragment = null;\n        $$.ctx = [];\n    }\n}\nfunction make_dirty(component, i) {\n    if (component.$$.dirty[0] === -1) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty.fill(0);\n    }\n    component.$$.dirty[(i / 31) | 0] |= (1 << (i % 31));\n}\nfunction init(component, options, instance, create_fragment, not_equal, props, dirty = [-1]) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: null,\n        // state\n        props,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(parent_component ? parent_component.$$.context : []),\n        // everything else\n        callbacks: blank_object(),\n        dirty,\n        skip_bound: false\n    };\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, options.props || {}, (i, ret, ...rest) => {\n            const value = rest.length ? rest[0] : ret;\n            if ($$.ctx && not_equal($$.ctx[i], $$.ctx[i] = value)) {\n                if (!$$.skip_bound && $$.bound[i])\n                    $$.bound[i](value);\n                if (ready)\n                    make_dirty(component, i);\n            }\n            return ret;\n        })\n        : [];\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    // `false` as a special case of no DOM component\n    $$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n    if (options.target) {\n        if (options.hydrate) {\n            const nodes = children(options.target);\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.l(nodes);\n            nodes.forEach(detach);\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor);\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement === 'function') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set($$props) {\n            if (this.$$set && !is_empty($$props)) {\n                this.$$.skip_bound = true;\n                this.$$set($$props);\n                this.$$.skip_bound = false;\n            }\n        }\n    };\n}\n/**\n * Base class for Svelte components. Used when dev=false.\n */\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set($$props) {\n        if (this.$$set && !is_empty($$props)) {\n            this.$$.skip_bound = true;\n            this.$$set($$props);\n            this.$$.skip_bound = false;\n        }\n    }\n}\n\nfunction dispatch_dev(type, detail) {\n    document.dispatchEvent(custom_event(type, Object.assign({ version: '3.32.3' }, detail)));\n}\nfunction append_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append(target, node);\n}\nfunction insert_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert(target, node, anchor);\n}\nfunction detach_dev(node) {\n    dispatch_dev('SvelteDOMRemove', { node });\n    detach(node);\n}\nfunction detach_between_dev(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction detach_before_dev(after) {\n    while (after.previousSibling) {\n        detach_dev(after.previousSibling);\n    }\n}\nfunction detach_after_dev(before) {\n    while (before.nextSibling) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction listen_dev(node, event, handler, options, has_prevent_default, has_stop_propagation) {\n    const modifiers = options === true ? ['capture'] : options ? Array.from(Object.keys(options)) : [];\n    if (has_prevent_default)\n        modifiers.push('preventDefault');\n    if (has_stop_propagation)\n        modifiers.push('stopPropagation');\n    dispatch_dev('SvelteDOMAddEventListener', { node, event, handler, modifiers });\n    const dispose = listen(node, event, handler, options);\n    return () => {\n        dispatch_dev('SvelteDOMRemoveEventListener', { node, event, handler, modifiers });\n        dispose();\n    };\n}\nfunction attr_dev(node, attribute, value) {\n    attr(node, attribute, value);\n    if (value == null)\n        dispatch_dev('SvelteDOMRemoveAttribute', { node, attribute });\n    else\n        dispatch_dev('SvelteDOMSetAttribute', { node, attribute, value });\n}\nfunction prop_dev(node, property, value) {\n    node[property] = value;\n    dispatch_dev('SvelteDOMSetProperty', { node, property, value });\n}\nfunction dataset_dev(node, property, value) {\n    node.dataset[property] = value;\n    dispatch_dev('SvelteDOMSetDataset', { node, property, value });\n}\nfunction set_data_dev(text, data) {\n    data = '' + data;\n    if (text.wholeText === data)\n        return;\n    dispatch_dev('SvelteDOMSetData', { node: text, data });\n    text.data = data;\n}\nfunction validate_each_argument(arg) {\n    if (typeof arg !== 'string' && !(arg && typeof arg === 'object' && 'length' in arg)) {\n        let msg = '{#each} only iterates over array-like objects.';\n        if (typeof Symbol === 'function' && arg && Symbol.iterator in arg) {\n            msg += ' You can use a spread to convert this iterable into an array.';\n        }\n        throw new Error(msg);\n    }\n}\nfunction validate_slots(name, slot, keys) {\n    for (const slot_key of Object.keys(slot)) {\n        if (!~keys.indexOf(slot_key)) {\n            console.warn(`<${name}> received an unexpected slot \"${slot_key}\".`);\n        }\n    }\n}\n/**\n * Base class for Svelte components with some minor dev-enhancements. Used when dev=true.\n */\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(\"'target' is a required option\");\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn('Component was already destroyed'); // eslint-disable-line no-console\n        };\n    }\n    $capture_state() { }\n    $inject_state() { }\n}\n/**\n * Base class to create strongly typed Svelte components.\n * This only exists for typing purposes and should be used in `.d.ts` files.\n *\n * ### Example:\n *\n * You have component library on npm called `component-library`, from which\n * you export a component called `MyComponent`. For Svelte+TypeScript users,\n * you want to provide typings. Therefore you create a `index.d.ts`:\n * ```ts\n * import { SvelteComponentTyped } from \"svelte\";\n * export class MyComponent extends SvelteComponentTyped<{foo: string}> {}\n * ```\n * Typing this makes it possible for IDEs like VS Code with the Svelte extension\n * to provide intellisense and to use the component like this in a Svelte file\n * with TypeScript:\n * ```svelte\n * <script lang=\"ts\">\n * \timport { MyComponent } from \"component-library\";\n * </script>\n * <MyComponent foo={'bar'} />\n * ```\n *\n * #### Why not make this part of `SvelteComponent(Dev)`?\n * Because\n * ```ts\n * class ASubclassOfSvelteComponent extends SvelteComponent<{foo: string}> {}\n * const component: typeof SvelteComponent = ASubclassOfSvelteComponent;\n * ```\n * will throw a type error, so we need to seperate the more strictly typed class.\n */\nclass SvelteComponentTyped extends SvelteComponentDev {\n    constructor(options) {\n        super(options);\n    }\n}\nfunction loop_guard(timeout) {\n    const start = Date.now();\n    return () => {\n        if (Date.now() - start > timeout) {\n            throw new Error('Infinite loop detected');\n        }\n    };\n}\n\nexport { HtmlTag, SvelteComponent, SvelteComponentDev, SvelteComponentTyped, SvelteElement, action_destroyer, add_attribute, add_classes, add_flush_callback, add_location, add_render_callback, add_resize_listener, add_transform, afterUpdate, append, append_dev, assign, attr, attr_dev, attribute_to_object, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_component, claim_element, claim_space, claim_text, clear_loops, component_subscribe, compute_rest_props, compute_slots, createEventDispatcher, create_animation, create_bidirectional_transition, create_component, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, dataset_dev, debug, destroy_block, destroy_component, destroy_each, detach, detach_after_dev, detach_before_dev, detach_between_dev, detach_dev, dirty_components, dispatch_dev, each, element, element_is, empty, escape, escaped, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, getContext, get_binding_group_value, get_current_component, get_custom_elements_slots, get_slot_changes, get_slot_context, get_spread_object, get_spread_update, get_store_value, globals, group_outros, handle_promise, hasContext, has_prop, identity, init, insert, insert_dev, intros, invalid_attribute_name_character, is_client, is_crossorigin, is_empty, is_function, is_promise, listen, listen_dev, loop, loop_guard, missing_component, mount_component, noop, not_equal, now, null_to_empty, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, prop_dev, query_selector_all, raf, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, self, setContext, set_attributes, set_current_component, set_custom_element_data, set_data, set_data_dev, set_input_type, set_input_value, set_now, set_raf, set_store_value, set_style, set_svg_attributes, space, spread, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, update_keyed_each, update_slot, update_slot_spread, validate_component, validate_each_argument, validate_each_keys, validate_slots, validate_store, xlink_attr };\n","import { noop, safe_not_equal, subscribe, run_all, is_function } from '../internal/index.mjs';\nexport { get_store_value as get } from '../internal/index.mjs';\n\nconst subscriber_queue = [];\n/**\n * Creates a `Readable` store that allows reading by subscription.\n * @param value initial value\n * @param {StartStopNotifier}start start and stop notifications for subscriptions\n */\nfunction readable(value, start) {\n    return {\n        subscribe: writable(value, start).subscribe\n    };\n}\n/**\n * Create a `Writable` store that allows both updating and reading by subscription.\n * @param {*=}value initial value\n * @param {StartStopNotifier=}start start and stop notifications for subscriptions\n */\nfunction writable(value, start = noop) {\n    let stop;\n    const subscribers = [];\n    function set(new_value) {\n        if (safe_not_equal(value, new_value)) {\n            value = new_value;\n            if (stop) { // store is ready\n                const run_queue = !subscriber_queue.length;\n                for (let i = 0; i < subscribers.length; i += 1) {\n                    const s = subscribers[i];\n                    s[1]();\n                    subscriber_queue.push(s, value);\n                }\n                if (run_queue) {\n                    for (let i = 0; i < subscriber_queue.length; i += 2) {\n                        subscriber_queue[i][0](subscriber_queue[i + 1]);\n                    }\n                    subscriber_queue.length = 0;\n                }\n            }\n        }\n    }\n    function update(fn) {\n        set(fn(value));\n    }\n    function subscribe(run, invalidate = noop) {\n        const subscriber = [run, invalidate];\n        subscribers.push(subscriber);\n        if (subscribers.length === 1) {\n            stop = start(set) || noop;\n        }\n        run(value);\n        return () => {\n            const index = subscribers.indexOf(subscriber);\n            if (index !== -1) {\n                subscribers.splice(index, 1);\n            }\n            if (subscribers.length === 0) {\n                stop();\n                stop = null;\n            }\n        };\n    }\n    return { set, update, subscribe };\n}\nfunction derived(stores, fn, initial_value) {\n    const single = !Array.isArray(stores);\n    const stores_array = single\n        ? [stores]\n        : stores;\n    const auto = fn.length < 2;\n    return readable(initial_value, (set) => {\n        let inited = false;\n        const values = [];\n        let pending = 0;\n        let cleanup = noop;\n        const sync = () => {\n            if (pending) {\n                return;\n            }\n            cleanup();\n            const result = fn(single ? values[0] : values, set);\n            if (auto) {\n                set(result);\n            }\n            else {\n                cleanup = is_function(result) ? result : noop;\n            }\n        };\n        const unsubscribers = stores_array.map((store, i) => subscribe(store, (value) => {\n            values[i] = value;\n            pending &= ~(1 << i);\n            if (inited) {\n                sync();\n            }\n        }, () => {\n            pending |= (1 << i);\n        }));\n        inited = true;\n        sync();\n        return function stop() {\n            run_all(unsubscribers);\n            cleanup();\n        };\n    });\n}\n\nexport { derived, readable, writable };\n","import { writable } from '../store/index.mjs';\nimport { now, loop, assign } from '../internal/index.mjs';\nimport { linear } from '../easing/index.mjs';\n\nfunction is_date(obj) {\n    return Object.prototype.toString.call(obj) === '[object Date]';\n}\n\nfunction tick_spring(ctx, last_value, current_value, target_value) {\n    if (typeof current_value === 'number' || is_date(current_value)) {\n        // @ts-ignore\n        const delta = target_value - current_value;\n        // @ts-ignore\n        const velocity = (current_value - last_value) / (ctx.dt || 1 / 60); // guard div by 0\n        const spring = ctx.opts.stiffness * delta;\n        const damper = ctx.opts.damping * velocity;\n        const acceleration = (spring - damper) * ctx.inv_mass;\n        const d = (velocity + acceleration) * ctx.dt;\n        if (Math.abs(d) < ctx.opts.precision && Math.abs(delta) < ctx.opts.precision) {\n            return target_value; // settled\n        }\n        else {\n            ctx.settled = false; // signal loop to keep ticking\n            // @ts-ignore\n            return is_date(current_value) ?\n                new Date(current_value.getTime() + d) : current_value + d;\n        }\n    }\n    else if (Array.isArray(current_value)) {\n        // @ts-ignore\n        return current_value.map((_, i) => tick_spring(ctx, last_value[i], current_value[i], target_value[i]));\n    }\n    else if (typeof current_value === 'object') {\n        const next_value = {};\n        for (const k in current_value) {\n            // @ts-ignore\n            next_value[k] = tick_spring(ctx, last_value[k], current_value[k], target_value[k]);\n        }\n        // @ts-ignore\n        return next_value;\n    }\n    else {\n        throw new Error(`Cannot spring ${typeof current_value} values`);\n    }\n}\nfunction spring(value, opts = {}) {\n    const store = writable(value);\n    const { stiffness = 0.15, damping = 0.8, precision = 0.01 } = opts;\n    let last_time;\n    let task;\n    let current_token;\n    let last_value = value;\n    let target_value = value;\n    let inv_mass = 1;\n    let inv_mass_recovery_rate = 0;\n    let cancel_task = false;\n    function set(new_value, opts = {}) {\n        target_value = new_value;\n        const token = current_token = {};\n        if (value == null || opts.hard || (spring.stiffness >= 1 && spring.damping >= 1)) {\n            cancel_task = true; // cancel any running animation\n            last_time = now();\n            last_value = new_value;\n            store.set(value = target_value);\n            return Promise.resolve();\n        }\n        else if (opts.soft) {\n            const rate = opts.soft === true ? .5 : +opts.soft;\n            inv_mass_recovery_rate = 1 / (rate * 60);\n            inv_mass = 0; // infinite mass, unaffected by spring forces\n        }\n        if (!task) {\n            last_time = now();\n            cancel_task = false;\n            task = loop(now => {\n                if (cancel_task) {\n                    cancel_task = false;\n                    task = null;\n                    return false;\n                }\n                inv_mass = Math.min(inv_mass + inv_mass_recovery_rate, 1);\n                const ctx = {\n                    inv_mass,\n                    opts: spring,\n                    settled: true,\n                    dt: (now - last_time) * 60 / 1000\n                };\n                const next_value = tick_spring(ctx, last_value, value, target_value);\n                last_time = now;\n                last_value = value;\n                store.set(value = next_value);\n                if (ctx.settled) {\n                    task = null;\n                }\n                return !ctx.settled;\n            });\n        }\n        return new Promise(fulfil => {\n            task.promise.then(() => {\n                if (token === current_token)\n                    fulfil();\n            });\n        });\n    }\n    const spring = {\n        set,\n        update: (fn, opts) => set(fn(target_value, value), opts),\n        subscribe: store.subscribe,\n        stiffness,\n        damping,\n        precision\n    };\n    return spring;\n}\n\nfunction get_interpolator(a, b) {\n    if (a === b || a !== a)\n        return () => a;\n    const type = typeof a;\n    if (type !== typeof b || Array.isArray(a) !== Array.isArray(b)) {\n        throw new Error('Cannot interpolate values of different type');\n    }\n    if (Array.isArray(a)) {\n        const arr = b.map((bi, i) => {\n            return get_interpolator(a[i], bi);\n        });\n        return t => arr.map(fn => fn(t));\n    }\n    if (type === 'object') {\n        if (!a || !b)\n            throw new Error('Object cannot be null');\n        if (is_date(a) && is_date(b)) {\n            a = a.getTime();\n            b = b.getTime();\n            const delta = b - a;\n            return t => new Date(a + t * delta);\n        }\n        const keys = Object.keys(b);\n        const interpolators = {};\n        keys.forEach(key => {\n            interpolators[key] = get_interpolator(a[key], b[key]);\n        });\n        return t => {\n            const result = {};\n            keys.forEach(key => {\n                result[key] = interpolators[key](t);\n            });\n            return result;\n        };\n    }\n    if (type === 'number') {\n        const delta = b - a;\n        return t => a + t * delta;\n    }\n    throw new Error(`Cannot interpolate ${type} values`);\n}\nfunction tweened(value, defaults = {}) {\n    const store = writable(value);\n    let task;\n    let target_value = value;\n    function set(new_value, opts) {\n        if (value == null) {\n            store.set(value = new_value);\n            return Promise.resolve();\n        }\n        target_value = new_value;\n        let previous_task = task;\n        let started = false;\n        let { delay = 0, duration = 400, easing = linear, interpolate = get_interpolator } = assign(assign({}, defaults), opts);\n        if (duration === 0) {\n            if (previous_task) {\n                previous_task.abort();\n                previous_task = null;\n            }\n            store.set(value = target_value);\n            return Promise.resolve();\n        }\n        const start = now() + delay;\n        let fn;\n        task = loop(now => {\n            if (now < start)\n                return true;\n            if (!started) {\n                fn = interpolate(value, new_value);\n                if (typeof duration === 'function')\n                    duration = duration(value, new_value);\n                started = true;\n            }\n            if (previous_task) {\n                previous_task.abort();\n                previous_task = null;\n            }\n            const elapsed = now - start;\n            if (elapsed > duration) {\n                store.set(value = new_value);\n                return false;\n            }\n            // @ts-ignore\n            store.set(value = fn(easing(elapsed / duration)));\n            return true;\n        });\n        return task.promise;\n    }\n    return {\n        set,\n        update: (fn, opts) => set(fn(target_value, value), opts),\n        subscribe: store.subscribe\n    };\n}\n\nexport { spring, tweened };\n","import { writable } from \"svelte/store\";\r\nimport CanvasImage from \"./core/CanvasItems/CanvasImage.svelte\";\r\nexport const canvasTargetTranslation = writable({ x: 0, y: 0 });\r\nexport const canvasTargetScale = writable(1);\r\nexport const canvasCurrentScale = writable(1);\r\nexport const canvasCurrentTranslation = writable({ x: 0, y: 0 });\r\nexport const devicePixelRatio = writable(window.devicePixelRatio);\r\nexport class CanvasItem {\r\n    constructor(id, position, scale, component) {\r\n        this.id = \"\"; //this will be randomly generated on server or client side\r\n        this.position = { x: 0, y: 0 };\r\n        this.scale = { x: 10, y: 10 };\r\n        this.component = CanvasImage;\r\n        this.inSelectionRange = false;\r\n        this.selected = false;\r\n        this.id = id;\r\n        this.position = position;\r\n        this.scale = scale;\r\n        this.component = component;\r\n    }\r\n}\r\nexport const canvasItems = writable([\r\n    new CanvasItem(\"asdfsjakldfldsa\", { x: 0, y: 0 }, { x: 100, y: 100 }, CanvasImage),\r\n    new CanvasItem(\"asdfsjakldflddsaf\", { x: 200, y: 200 }, { x: 300, y: 300 }, CanvasImage),\r\n    new CanvasItem(\"asdfsjakldfldsa\", { x: 300, y: 0 }, { x: 100, y: 100 }, CanvasImage),\r\n    new CanvasItem(\"asdfsjakldfldsa\", { x: 400, y: 0 }, { x: 100, y: 100 }, CanvasImage),\r\n    new CanvasItem(\"asdfsjakldfldsa\", { x: 500, y: 0 }, { x: 100, y: 100 }, CanvasImage),\r\n]);\r\n/*-----   Input System   -----*/\r\nexport let activeInput = [];\r\nexport const operations = {\r\n    ITEM: {\r\n        SELECT: \"item.select\",\r\n        SELECT_ADDITIVE: \"item.select_additive\",\r\n        MOVE: \"item.move\",\r\n    },\r\n    CANVAS: {\r\n        BOX_SELECT: \"canvas.box_select\",\r\n        BOX_SELECT_ADDITIVE: \"canvas.box_select_additive\",\r\n        PAN: \"canvas.pan\",\r\n        ZOOM_IN: \"canvas.zoom_in\",\r\n        ZOOM_OUT: \"canvas.zoom_out\",\r\n    },\r\n    SHORTCUT: {\r\n        SAVE: \"shortcut.save\",\r\n        ALIGN_TOP: \"shortcut.align_top\",\r\n    },\r\n};\r\nexport class Mapping {\r\n    constructor(operation, input) {\r\n        this.input = [];\r\n        this.onDown = () => { };\r\n        this.onUp = () => { };\r\n        this.operation = operation;\r\n        this.input = input;\r\n    }\r\n    setDown(func) {\r\n        this.onDown = func;\r\n        return this;\r\n    }\r\n    setUp(func) {\r\n        this.onUp = func;\r\n        return this;\r\n    }\r\n}\r\nexport let mappings = [\r\n    new Mapping(operations.SHORTCUT.ALIGN_TOP, [\"control\", \"arrowup\"]),\r\n    new Mapping(operations.CANVAS.BOX_SELECT, [\"leftMouse\"]),\r\n    new Mapping(operations.CANVAS.BOX_SELECT_ADDITIVE, [\"shift\", \"leftMouse\"]),\r\n    new Mapping(operations.CANVAS.PAN, [\"alt\", \"rightMouse\"]),\r\n    new Mapping(operations.CANVAS.PAN, [\"middleMouse\"]),\r\n    new Mapping(operations.CANVAS.ZOOM_IN, [\"scrollUp\"]),\r\n    new Mapping(operations.CANVAS.ZOOM_OUT, [\"scrollDown\"]),\r\n    new Mapping(operations.ITEM.MOVE, [\"leftMouse\"]),\r\n    new Mapping(operations.ITEM.SELECT, [\"leftMouse\"]),\r\n    new Mapping(operations.ITEM.SELECT_ADDITIVE, [\"shift\", \"leftMouse\"]),\r\n];\r\n","import { get } from \"svelte/store\";\r\nimport { canvasTargetTranslation, canvasTargetScale } from \"../stores\";\r\nfunction getCanvasValues() {\r\n    let canvasTargetTranslationValue = { x: 0, y: 0 };\r\n    let canvasTargetScaleValue = 1;\r\n    canvasTargetTranslationValue = get(canvasTargetTranslation);\r\n    canvasTargetScaleValue = get(canvasTargetScale);\r\n    return { offset: canvasTargetTranslationValue, scale: canvasTargetScaleValue };\r\n}\r\nfunction screenToWorld(screenX, screenY, customX = null, customY = null, customScale = null) {\r\n    let canvas = getCanvasValues();\r\n    if (customX != null) {\r\n        canvas.offset.x = customX;\r\n    }\r\n    if (customY != null) {\r\n        canvas.offset.y = customY;\r\n    }\r\n    if (customScale != null) {\r\n        canvas.scale = customScale;\r\n    }\r\n    return {\r\n        x: (screenX - canvas.offset.x) / canvas.scale,\r\n        y: (screenY - canvas.offset.y) / canvas.scale,\r\n    };\r\n}\r\nfunction worldToScreen(worldX, worldY, customX = null, customY = null, customScale = null) {\r\n    let canvas;\r\n    canvas = { offset: { x: 0, y: 0 }, scale: 1 };\r\n    let devicePixelRatio = window.devicePixelRatio;\r\n    if (customX != null) {\r\n        canvas.offset.x = customX;\r\n    }\r\n    if (customY != null) {\r\n        canvas.offset.y = customY;\r\n    }\r\n    if (customScale != null) {\r\n        canvas.scale = customScale;\r\n    }\r\n    return {\r\n        x: worldX * canvas.scale + canvas.offset.x,\r\n        y: worldY * canvas.scale + canvas.offset.y,\r\n    };\r\n}\r\nclass Vector {\r\n    static addEach(vector1, vector2) {\r\n        if (vector1 == null || vector2 == null)\r\n            return;\r\n        return { x: vector1.x + vector2.x, y: vector1.y + vector2.y };\r\n    }\r\n    static subtractEach(vector1, vector2) {\r\n        if (vector1 == null || vector2 == null)\r\n            return;\r\n        return { x: vector1.x - vector2.x, y: vector1.y - vector2.y };\r\n    }\r\n    static multiplyBoth(vector, multiplier) {\r\n        if (vector == null || multiplier == null)\r\n            return;\r\n        return { x: vector.x * multiplier, y: vector.y * multiplier };\r\n    }\r\n    static multiplyEach(vector, multiplier) {\r\n        if (vector == null || multiplier == null)\r\n            return;\r\n        return { x: vector.x * multiplier.x, y: vector.y * multiplier.y };\r\n    }\r\n    static divideEach(vector, divisor) {\r\n        if (vector == null || divisor == null)\r\n            return;\r\n        return { x: vector.x / divisor.x, y: vector.y * divisor.y };\r\n    }\r\n    static getLength(vector) {\r\n        if (vector == null)\r\n            return;\r\n        return Math.sqrt(Math.pow(vector.x, 2) + Math.pow(vector.y, 2));\r\n    }\r\n}\r\nfunction overlappingRect(rect1, rect2) {\r\n    let overlap = false;\r\n    if (rect1 && rect2) {\r\n        overlap = !(rect1.right < rect2.left ||\r\n            rect1.left > rect2.right ||\r\n            rect1.bottom < rect2.top ||\r\n            rect1.top > rect2.bottom);\r\n    }\r\n    return overlap;\r\n}\r\nfunction squareNormalization(corner1, corner2) {\r\n    let position = { x: 0, y: 0 };\r\n    let scale = { x: 0.0, y: 0.0 };\r\n    if (corner1.x > corner2.x) {\r\n        position.x = corner2.x;\r\n        scale.x = corner1.x - corner2.x;\r\n    }\r\n    else {\r\n        position.x = corner1.x;\r\n        scale.x = corner2.x - corner1.x;\r\n    }\r\n    if (corner1.y > corner2.y) {\r\n        position.y = corner2.y;\r\n        scale.y = corner1.y - corner2.y;\r\n    }\r\n    else {\r\n        position.y = corner1.y;\r\n        scale.y = corner2.y - corner1.y;\r\n    }\r\n    return { x: position.x, y: position.y, width: scale.x, height: scale.y };\r\n}\r\nfunction clamp(num, min, max) {\r\n    return Math.min(Math.max(num, min), max);\r\n}\r\nexport { screenToWorld, worldToScreen, Vector, overlappingRect, squareNormalization, clamp };\r\n","import { activeInput, mappings } from \"../stores\";\r\nexport const mouseButtonMap = [\"leftMouse\", \"middleMouse\", \"rightMouse\"];\r\nexport function pushInput(input, e) {\r\n    if (activeInput.includes(input)) {\r\n        return;\r\n    }\r\n    activeInput.push(input);\r\n    return;\r\n}\r\nexport function spliceInput(input) {\r\n    if (!activeInput.includes(input)) {\r\n        return;\r\n    }\r\n    activeInput.splice(activeInput.indexOf(input), 1);\r\n}\r\nexport function compareInput(operation, input = activeInput) {\r\n    let operationMappings = mappings.filter((element) => element.operation == operation);\r\n    for (let mapping of operationMappings) {\r\n        if (input.toString() == mapping.input.toString()) {\r\n            return true;\r\n        }\r\n        for (let mapping of mappings.filter((element) => element.operation != operation)) {\r\n            if (input.toString().includes(mapping.input.toString())) {\r\n                return false;\r\n            }\r\n        }\r\n        if (input.toString().includes(mapping.input.toString())) {\r\n            return true;\r\n        }\r\n    }\r\n}\r\nexport function preventDefault(input, e) {\r\n    if (mappings.find((element) => element.input.toString() == activeInput.toString())) {\r\n        try {\r\n            e.preventDefault();\r\n        }\r\n        catch (error) {\r\n            console.warn('Error preventing default for input \"', mappings.find((element) => element.input.toString() == activeInput.toString()).operation, '\" this may be a bug, or may be fine', \"\\n\", error);\r\n        }\r\n    }\r\n}\r\nexport function shortcutDown(e) {\r\n    let shortcuts = mappings.filter((element) => element.operation.startsWith(\"shortcut\"));\r\n    for (let i = 0; i < shortcuts.length; i++) {\r\n        if (shortcuts[i].input.toString() == activeInput.toString()) {\r\n            try {\r\n                shortcuts[i].onDown();\r\n            }\r\n            catch (_a) {\r\n                console.error(activeInput);\r\n            }\r\n            preventDefault(activeInput, e);\r\n        }\r\n    }\r\n}\r\nexport function shortcutUp(e) {\r\n    let shortcuts = mappings.filter((element) => element.operation.startsWith(\"shortcut\"));\r\n    for (let i = 0; i < shortcuts.length; i++) {\r\n        if (shortcuts[i].input.toString() == activeInput.toString()) {\r\n            shortcuts[i].onUp();\r\n            preventDefault(activeInput, e);\r\n        }\r\n    }\r\n}\r\n//Processes key inputs to remove duplicate keys-- Watch for errors with toLowercase, may need to only apply it to certain key ranges\r\nexport function processKey(key) {\r\n    let processedKey = key;\r\n    processedKey = processedKey.toLowerCase();\r\n    return processedKey;\r\n}\r\n","import { get } from \"svelte/store\";\r\nimport { canvasItems } from \"../stores\";\r\nexport function clearSelection() {\r\n    for (let item of get(canvasItems).filter((item) => item.selected)) {\r\n        item.selected = false; //TODO: Split element deselection into a separate function\r\n    }\r\n    canvasItems.update((u) => u);\r\n}\r\n","<script lang=\"ts\">\r\n  import { overlappingRect, screenToWorld, squareNormalization, Vector, worldToScreen } from \"../scripts/helpers\";\r\n  import { compareInput } from \"../scripts/input-management\";\r\n  import { clearSelection } from \"../scripts/selection-management\";\r\n  import {\r\n    activeInput,\r\n    canvasCurrentScale,\r\n    canvasCurrentTranslation,\r\n    canvasItems,\r\n    mappings,\r\n    operations,\r\n  } from \"../stores\";\r\n\r\n  export let visibility = \"hidden\";\r\n\r\n  let start = { x: 0, y: 0 };\r\n  let scale = { x: 0, y: 0 };\r\n  let position = { x: 0, y: 0 };\r\n  let selecting = false;\r\n\r\n  export const backgroundStartBoxSelection = (x: number, y: number, additive: boolean) =>\r\n    startBoxSelection(x, y, additive);\r\n\r\n  function windowMouseMove(e: MouseEvent) {\r\n    boxSelectMouseMove(e);\r\n  }\r\n  function windowMouseUp(e: MouseEvent) {\r\n    boxSelectMouseUp(e);\r\n  }\r\n\r\n  function boxSelectMouseMove(e: MouseEvent) {\r\n    if (selecting) {\r\n      if (compareInput(operations.CANVAS.BOX_SELECT)) {\r\n        dragBoxSelection(e.clientX, e.clientY, false);\r\n      } else if (compareInput(operations.CANVAS.BOX_SELECT_ADDITIVE)) {\r\n        dragBoxSelection(e.clientX, e.clientY, true);\r\n      } else {\r\n        endBoxSelection();\r\n      }\r\n    }\r\n  }\r\n  function boxSelectMouseUp(e: MouseEvent) {\r\n    if (\r\n      selecting &&\r\n      activeInput.toString() !=\r\n        mappings\r\n          .find((element) => element.operation == operations.CANVAS.BOX_SELECT || operations.CANVAS.BOX_SELECT_ADDITIVE)\r\n          .input.toString()\r\n    ) {\r\n      endBoxSelection();\r\n    }\r\n  }\r\n\r\n  function startBoxSelection(x: number, y: number, additive: boolean) {\r\n    selecting = true;\r\n    start = screenToWorld(x, y);\r\n    scale = { x: 0, y: 0 };\r\n    position = { x: 0, y: 0 };\r\n    visibility = \"hidden\";\r\n    if (!additive) {\r\n      clearSelection();\r\n    }\r\n  }\r\n  function dragBoxSelection(cx: number, cy: number, additive: boolean) {\r\n    let currentToWorld = screenToWorld(cx, cy);\r\n    let square = squareNormalization(start, currentToWorld);\r\n    scale = { x: square.width, y: square.height };\r\n    position = { x: square.x, y: square.y };\r\n    visibility = \"visible\";\r\n    compareSelection(additive);\r\n  }\r\n  function endBoxSelection() {\r\n    for (let item of $canvasItems) {\r\n      if (item.inSelectionRange) {\r\n        item.selected = true;\r\n        item.inSelectionRange = false;\r\n      }\r\n    }\r\n    canvasItems.update((u) => u);\r\n    selecting = false;\r\n    visibility = \"hidden\";\r\n  }\r\n\r\n  let scaleScreen = { x: 0, y: 0 };\r\n  $: positionScreen = worldToScreen(\r\n    position.x,\r\n    position.y,\r\n    $canvasCurrentTranslation.x,\r\n    $canvasCurrentTranslation.y,\r\n    $canvasCurrentScale\r\n  );\r\n  $: scaleScreen = Vector.multiplyBoth(scale, $canvasCurrentScale);\r\n\r\n  //Function that compares elements to the boxSelection box.\r\n  function compareSelection(additive: boolean) {\r\n    for (let item of $canvasItems) {\r\n      if (\r\n        overlappingRect(\r\n          new DOMRect(position.x, position.y, scale.x, scale.y),\r\n          new DOMRect(item.position.x, item.position.y, item.scale.x, item.scale.y)\r\n        )\r\n      ) {\r\n        //TODO: split element boxSelection into a separate function that could be called by a mouse events.\r\n        item.inSelectionRange = true;\r\n      } else {\r\n        item.inSelectionRange = false;\r\n      }\r\n    }\r\n    canvasItems.update((u) => u);\r\n  }\r\n</script>\r\n\r\n<svelte:window on:mousemove={windowMouseMove} on:mouseup={windowMouseUp} />\r\n<svg\r\n  id=\"selection\"\r\n  width={Math.max(6, scaleScreen.x)}\r\n  height={Math.max(6, scaleScreen.y)}\r\n  style=\"\r\n    transform:translate({positionScreen.x}px, {positionScreen.y}px);\r\n    visibility:{visibility};\r\n  \"\r\n>\r\n  <defs>\r\n    <filter id=\"selection-glow\" x=\"-10\" y=\"-10\" width=\"200\" height=\"200\">\r\n      <feGaussianBlur result=\"blurOut\" stdDeviation=\"10\" />\r\n      <feBlend in=\"SourceGraphic\" in2=\"blurOut\" mode=\"normal\" />\r\n    </filter>\r\n  </defs>\r\n  <rect\r\n    id=\"selection-box\"\r\n    x=\"3\"\r\n    y=\"3\"\r\n    width={Math.max(3, scaleScreen.x - 6)}\r\n    height={Math.max(3, scaleScreen.y - 6)}\r\n    rx=\"5\"\r\n    filter=\"url(#selection-glow)\"\r\n  />\r\n</svg>\r\n\r\n<style>\r\n  #selection {\r\n    position: absolute;\r\n    left: 0;\r\n    top: 0;\r\n    transform-origin: top left;\r\n    pointer-events: none;\r\n    z-index: 10;\r\n  }\r\n  #selection-box {\r\n    fill: rgba(0, 183, 255, 0.295);\r\n    stroke-width: 3;\r\n    stroke: rgb(21, 189, 255);\r\n  }\r\n</style>\r\n","<script lang=\"ts\">\r\n  import { worldToScreen, screenToWorld, Vector } from \"../scripts/helpers\";\r\n  import { compareInput, mouseButtonMap, pushInput } from \"../scripts/input-management\";\r\n\r\n  import { canvasItems, CanvasItem, canvasCurrentScale, canvasCurrentTranslation, operations } from \"../stores\";\r\n  let position = { x: 0, y: 0 };\r\n  let scale = { x: 100, y: 50 };\r\n  let initialScale = { x: 0, y: 0 };\r\n  let visible = true;\r\n  let visibility = \"hidden\";\r\n  let bounds = { left: 0, right: 0, top: 0, bottom: 0 };\r\n  $: if (visible) {\r\n    visibility = \"visible\";\r\n  } else {\r\n    visibility = \"hidden\";\r\n  }\r\n  $: currentCanvasItems = $canvasItems;\r\n  $: selectedItems = currentCanvasItems.filter((element) => element.selected);\r\n  $: if (selectedItems.length > 0) {\r\n    visible = true;\r\n  } else {\r\n    visible = false;\r\n  }\r\n\r\n  $: if (visible) {\r\n    let left = selectedItems.sort((a, b) => a.position.x - b.position.x)[0].position.x;\r\n    let rightSort = selectedItems.sort((a, b) => -a.position.x - a.scale.x + (b.position.x + b.scale.x));\r\n    let right = rightSort[0].position.x + rightSort[0].scale.x;\r\n    let top = selectedItems.sort((a, b) => a.position.y - b.position.y)[0].position.y;\r\n    let bottomSort = selectedItems.sort((a, b) => -a.position.y - a.scale.y + b.position.y + b.scale.y);\r\n    let bottom = bottomSort[0].position.y + bottomSort[0].scale.y;\r\n    bounds = { left: left, right: right, top: top, bottom: bottom };\r\n  }\r\n\r\n  $: if (visible) {\r\n    position = worldToScreen(\r\n      bounds.left,\r\n      bounds.top,\r\n      $canvasCurrentTranslation.x,\r\n      $canvasCurrentTranslation.y,\r\n      $canvasCurrentScale\r\n    );\r\n  }\r\n  $: if (visible) {\r\n    let bottomRight = worldToScreen(bounds.right, bounds.bottom);\r\n    let topLeft = worldToScreen(bounds.left, bounds.top);\r\n    let difference = { x: bottomRight.x - topLeft.x, y: bottomRight.y - topLeft.y };\r\n\r\n    scale = Vector.multiplyBoth(difference, $canvasCurrentScale);\r\n  }\r\n\r\n  const positionMultiplier = {\r\n    TOP_LEFT: { x: 1, y: 1 },\r\n    TOP_RIGHT: { x: 0, y: 1 },\r\n    BOTTOM_LEFT: { x: 1, y: 0 },\r\n    BOTTOM_RIGHT: { x: 0, y: 0 },\r\n  };\r\n  const scaleMultiplier = {\r\n    TOP_LEFT: { x: -1, y: -1 },\r\n    TOP_RIGHT: { x: 1, y: -1 },\r\n    BOTTOM_LEFT: { x: -1, y: 1 },\r\n    BOTTOM_RIGHT: { x: 1, y: 1 },\r\n  };\r\n\r\n  const scalePoints = {\r\n    TOP_LEFT: { positionMultiplier: positionMultiplier.TOP_LEFT, scaleMultiplier: scaleMultiplier.TOP_LEFT },\r\n    TOP_RIGHT: { positionMultiplier: positionMultiplier.TOP_RIGHT, scaleMultiplier: scaleMultiplier.TOP_RIGHT },\r\n    BOTTOM_LEFT: { positionMultiplier: positionMultiplier.BOTTOM_LEFT, scaleMultiplier: scaleMultiplier.BOTTOM_LEFT },\r\n    BOTTOM_RIGHT: {\r\n      positionMultiplier: positionMultiplier.BOTTOM_RIGHT,\r\n      scaleMultiplier: scaleMultiplier.BOTTOM_RIGHT,\r\n    },\r\n  };\r\n\r\n  let scaling = false;\r\n  let scalePoint = null;\r\n\r\n  function windowMouseMove(e: MouseEvent) {\r\n    if (compareInput(operations.ITEM.MOVE) && scaling && scalePoint != null) {\r\n      let worldMovement = Vector.multiplyBoth({ x: e.movementX, y: e.movementY }, 1 / $canvasCurrentScale);\r\n      let positionChange = Vector.multiplyEach(worldMovement, scalePoint.positionMultiplier);\r\n      let scaleChange = Vector.multiplyEach(worldMovement, scalePoint.scaleMultiplier);\r\n      for (let item of selectedItems) {\r\n        let selectionPositionProportion = Vector.divideEach(item.position, initialScale);\r\n        let selectionScaleProportion = Vector.divideEach(item.scale, initialScale);\r\n        console.log(selectionScaleProportion);\r\n        let proportionalPosition = positionChange;\r\n        let proportionalScale = Vector.multiplyEach(scaleChange, selectionScaleProportion);\r\n        item.position = Vector.addEach(item.position, proportionalPosition);\r\n        item.scale = Vector.addEach(item.scale, proportionalScale);\r\n      }\r\n      canvasItems.update((u) => u);\r\n    }\r\n  }\r\n\r\n  function windowMouseUp(e: MouseEvent) {\r\n    if (!compareInput(operations.ITEM.MOVE)) {\r\n      scaling = false;\r\n      scalePoint = null;\r\n    }\r\n  }\r\n\r\n  function scaleMouseDown(e: MouseEvent, point: any = scalePoints.TOP_LEFT) {\r\n    pushInput(mouseButtonMap[e.button]);\r\n    if (compareInput(operations.ITEM.MOVE)) {\r\n      scaling = true;\r\n      scalePoint = point;\r\n      initialScale = scale;\r\n    }\r\n  }\r\n</script>\r\n\r\n<svelte:window on:mousemove={windowMouseMove} on:mouseup={windowMouseUp} />\r\n<div id=\"selection\" style=\"--visibility:{visibility};\">\r\n  <svg>\r\n    <line x1={position.x} y1={position.y - 1} x2={position.x + scale.x} y2={position.y - 1} />\r\n    <rect x={position.x} y={position.y} width=\"{scale.x}px\" height=\"{scale.y}px\" rx={40 * $canvasCurrentScale} />\r\n    <circle on:mousedown={(e) => scaleMouseDown(e, scalePoints.TOP_LEFT)} cx={position.x} cy={position.y} r={8} />\r\n    <circle\r\n      on:mousedown={(e) => scaleMouseDown(e, scalePoints.TOP_RIGHT)}\r\n      cx={position.x + scale.x}\r\n      cy={position.y}\r\n      r={8}\r\n    />\r\n    <circle\r\n      on:mousedown={(e) => scaleMouseDown(e, scalePoints.BOTTOM_RIGHT)}\r\n      cx={position.x + scale.x}\r\n      cy={position.y + scale.y}\r\n      r={8}\r\n    />\r\n    <circle\r\n      on:mousedown={(e) => scaleMouseDown(e, scalePoints.BOTTOM_LEFT)}\r\n      cx={position.x}\r\n      cy={position.y + scale.y}\r\n      r={8}\r\n    />\r\n  </svg>\r\n</div>\r\n\r\n<style>\r\n  #selection {\r\n    z-index: 10;\r\n    left: 0;\r\n    top: 0;\r\n    right: 0;\r\n    bottom: 0;\r\n    pointer-events: none;\r\n    position: absolute;\r\n    visibility: var(--visibility);\r\n  }\r\n  svg {\r\n    width: 100%;\r\n    height: 100%;\r\n  }\r\n  rect {\r\n    fill: none;\r\n    stroke: blue;\r\n    stroke-width: 3px;\r\n  }\r\n  circle {\r\n    fill: blue;\r\n    pointer-events: all;\r\n  }\r\n</style>\r\n","<script lang=\"ts\">\r\n  import { activeInput, canvasCurrentScale, canvasItems, operations } from \"../stores\";\r\n  import { createEventDispatcher } from \"svelte\";\r\n  import { compareInput, mouseButtonMap, pushInput } from \"../scripts/input-management\";\r\n  import { Vector } from \"../scripts/helpers\";\r\n  import { clearSelection } from \"../scripts/selection-management\";\r\n\r\n  const dispatch = createEventDispatcher();\r\n  const DRAG_THRESHOLD = 20; //TODO: Build out a settings store (maybe multiple stores for different things)\r\n\r\n  export let itemId = \"\";\r\n  export let itemIndex = 0;\r\n  let divclass = \"\";\r\n  let position = { x: 0, y: 0 };\r\n  let scale = { x: 1, y: 1 };\r\n  let canvasZoom = 1;\r\n  $: canvasZoom = $canvasCurrentScale;\r\n  $: canvasItem = $canvasItems[itemIndex];\r\n  $: position = canvasItem.position;\r\n  $: scale = canvasItem.scale;\r\n  $: selected = canvasItem.selected;\r\n  $: inSelectionRange = canvasItem.inSelectionRange;\r\n  $: if (selected) {\r\n    divclass = \"root selected\";\r\n  } else if (inSelectionRange) {\r\n    divclass = \"root test\";\r\n  } else {\r\n    divclass = \"root selectable\";\r\n  }\r\n\r\n  let selectPressed = false;\r\n  let selectAdditivePressed = false;\r\n  let movePressed = false;\r\n  let dragging = false;\r\n  let dragStart = { x: 0, y: 0 };\r\n  function mouseDown(e: MouseEvent) {\r\n    pushInput(mouseButtonMap[e.button]);\r\n    if (compareInput(operations.ITEM.SELECT)) {\r\n      selectPressed = true;\r\n    }\r\n    if (compareInput(operations.ITEM.SELECT_ADDITIVE)) {\r\n      selectAdditivePressed = true;\r\n    }\r\n    if (compareInput(operations.ITEM.MOVE)) {\r\n      movePressed = true;\r\n      dragStart = { x: e.clientX, y: e.clientY };\r\n    }\r\n  }\r\n  function windowMouseMove(e: MouseEvent) {\r\n    if (!dragging) {\r\n      let difference = Vector.subtractEach({ x: e.clientX, y: e.clientY }, dragStart);\r\n      let distance = Vector.getLength(difference);\r\n      if (distance > DRAG_THRESHOLD) {\r\n        dragging = true;\r\n      }\r\n    }\r\n    if (compareInput(operations.ITEM.MOVE) && movePressed && dragging) {\r\n      if (!selected) {\r\n        clearSelection();\r\n        canvasItem.selected = true;\r\n      }\r\n      dragItems(e.movementX / devicePixelRatio, e.movementY / devicePixelRatio);\r\n      selectPressed = false;\r\n      selectAdditivePressed = false;\r\n    }\r\n  }\r\n  function windowMouseUp(e: MouseEvent) {\r\n    if (!compareInput(operations.ITEM.MOVE)) {\r\n      movePressed = false;\r\n      dragging = false;\r\n    }\r\n    if (!compareInput(operations.ITEM.SELECT) && selectPressed) {\r\n      selectInputUp(false);\r\n    }\r\n    if (!compareInput(operations.ITEM.SELECT_ADDITIVE) && selectAdditivePressed) {\r\n      selectInputUp(true);\r\n    }\r\n  }\r\n\r\n  function selectInputUp(additive = false) {\r\n    console.log(additive);\r\n    console.log(\"selected \", canvasItem.selected);\r\n    if (selectPressed || selectAdditivePressed) {\r\n      if (additive) {\r\n        canvasItem.selected = !canvasItem.selected;\r\n      } else {\r\n        clearSelection();\r\n        canvasItem.selected = true;\r\n      }\r\n      canvasItems.update((u) => u);\r\n    }\r\n    selectPressed = false;\r\n    selectAdditivePressed = false;\r\n  }\r\n\r\n  function dragItems(dx: number, dy: number) {\r\n    for (let item of $canvasItems.filter((item) => item.selected == true)) {\r\n      let transformVector = Vector.multiplyBoth({ x: dx, y: dy }, 1 / $canvasCurrentScale);\r\n      item.position = Vector.addEach(item.position, transformVector);\r\n    }\r\n    canvasItems.update((u) => u);\r\n  }\r\n</script>\r\n\r\n<svelte:window on:mousemove={windowMouseMove} on:mouseup={windowMouseUp} />\r\n<div\r\n  id=\"root\"\r\n  style=\"--positionX: {position.x}px; --positionY: {position.y}px; --scaleX: {scale.x}px; --scaleY: {scale.y}px; --canvasZoom: {canvasZoom}\"\r\n  class={divclass}\r\n  on:mousedown={mouseDown}\r\n>\r\n  <slot class=\"slot\" {itemId} {position} {scale}>This item has no type</slot>\r\n</div>\r\n\r\n<style>\r\n  .root {\r\n    position: absolute;\r\n    transform-origin: top left;\r\n    transform: translate(var(--positionX), var(--positionY));\r\n    width: var(--scaleX);\r\n    height: var(--scaleY);\r\n    transition-duration: 300ms;\r\n    transition-property: border-radius;\r\n    overflow: hidden;\r\n  }\r\n  .selectable {\r\n    --test: calc(4px / var(--canvasZoom));\r\n    border-radius: 10px;\r\n    box-shadow: 0px 2px var(--test) rgba(0, 0, 0, 0.3);\r\n  }\r\n  .selected {\r\n    --test: calc(8px / var(--canvasZoom));\r\n    transform: translate(var(--positionX), var(--positionY));\r\n    border-radius: 40px;\r\n    transition-timing-function: cubic-bezier(0.4, 2.5, 0.42, 0.5);\r\n    opacity: 1;\r\n  }\r\n  .test {\r\n    opacity: 0.5;\r\n  }\r\n</style>\r\n","<script lang=\"ts\">\r\n  import { spring } from \"svelte/motion\";\r\n  import {\r\n    screenToWorld,\r\n    Vector,\r\n    squareNormalization,\r\n    worldToScreen,\r\n    overlappingRect,\r\n    clamp,\r\n  } from \"../scripts/helpers\";\r\n  import {\r\n    canvasTargetTranslation,\r\n    canvasTargetScale,\r\n    canvasCurrentScale,\r\n    canvasCurrentTranslation,\r\n    canvasItems,\r\n    activeInput,\r\n    operations,\r\n    mappings,\r\n  } from \"../stores\";\r\n  import BoxSelection from \"./BoxSelection.svelte\";\r\n  import Selection from \"./Selection.svelte\";\r\n  import CanvasItem from \"./CanvasItem.svelte\";\r\n  import {\r\n    compareInput,\r\n    mouseButtonMap,\r\n    processKey,\r\n    pushInput,\r\n    shortcutDown,\r\n    shortcutUp,\r\n    spliceInput,\r\n  } from \"../scripts/input-management\";\r\n  import { clearSelection } from \"../scripts/selection-management\";\r\n  const PAN_STIFFNESS = 1;\r\n  const PAN_DAMPING = 1;\r\n  const ZOOM_STIFFNESS = 0.2;\r\n  const ZOOM_DAMPING = 1;\r\n  const KEY_PAN_AMMOUNT = 100;\r\n\r\n  const SCROLL_ZOOM_MULTIPLIER = 2;\r\n\r\n  let boxSelection: BoxSelection;\r\n\r\n  /*   Keyboard Input   */\r\n\r\n  document.addEventListener(\"keydown\", keyDown);\r\n  function keyDown(e: KeyboardEvent) {\r\n    let processedKey = processKey(e.key);\r\n    if (e.repeat) {\r\n      return;\r\n    }\r\n    pushInput(processedKey);\r\n    shortcutDown(e);\r\n    panInputStart(e);\r\n  }\r\n\r\n  document.addEventListener(\"keyup\", keyUp);\r\n  function keyUp(e: KeyboardEvent) {\r\n    e.preventDefault();\r\n    let processedKey = processKey(e.key);\r\n    shortcutUp(e);\r\n    spliceInput(processedKey);\r\n    panInputEnd();\r\n  }\r\n\r\n  /*   Window Focus   */\r\n  window.addEventListener(\"focus\", windowFocus);\r\n  function windowFocus() {}\r\n\r\n  window.addEventListener(\"blur\", windowBlur);\r\n  function windowBlur() {\r\n    shortcutUp(null); //runs the keyup event for any given shortcut, watch for bugs with this!\r\n    activeInput.splice(0, activeInput.length);\r\n  }\r\n\r\n  document.addEventListener(\"mousedown\", mouseDown);\r\n  function mouseDown(e: MouseEvent) {\r\n    pushInput(mouseButtonMap[e.button]);\r\n  }\r\n  document.addEventListener(\"mouseup\", mouseUp);\r\n  function mouseUp(e: MouseEvent) {\r\n    spliceInput(mouseButtonMap[e.button]);\r\n\r\n    panInputEnd();\r\n  }\r\n  document.addEventListener(\"mousemove\", mouseMove);\r\n  function mouseMove(e: MouseEvent) {\r\n    panMouseMove(e);\r\n  }\r\n\r\n  function backgroundMouseDown(e: MouseEvent) {\r\n    pushInput(mouseButtonMap[e.button]);\r\n    if (compareInput(operations.CANVAS.BOX_SELECT)) {\r\n      boxSelection.backgroundStartBoxSelection(e.clientX, e.clientY, false);\r\n    }\r\n    if (compareInput(operations.CANVAS.BOX_SELECT_ADDITIVE)) {\r\n      boxSelection.backgroundStartBoxSelection(e.clientX, e.clientY, true);\r\n    }\r\n  }\r\n\r\n  function canvasMouseDown(e: MouseEvent) {\r\n    pushInput(mouseButtonMap[e.button]);\r\n    panInputStart(e);\r\n  }\r\n\r\n  function canvasMouseWheel(e: WheelEvent) {\r\n    switch (clamp(e.deltaY, -1, 1) * -1) {\r\n      case -1:\r\n        pushInput(\"scrollDown\");\r\n        break;\r\n      case 1:\r\n        pushInput(\"scrollUp\");\r\n        break;\r\n    }\r\n    const clientInit = screenToWorld(e.clientX, e.clientY);\r\n    zoomInput();\r\n    spliceInput(\"scrollDown\");\r\n    spliceInput(\"scrollUp\");\r\n    const clientNow = screenToWorld(e.clientX, e.clientY, null, null, zoomTarget.s);\r\n    let change = Vector.multiplyBoth(Vector.subtractEach(clientNow, clientInit), zoomTarget.s);\r\n    offsetZoom(change.x, change.y);\r\n  }\r\n\r\n  function panMouseMove(e: MouseEvent) {\r\n    if (panning) {\r\n      if (compareInput(operations.CANVAS.PAN)) {\r\n        pan(e.movementX, e.movementY);\r\n      }\r\n    }\r\n  }\r\n  function panInputStart(e: any) {\r\n    if (compareInput(operations.CANVAS.PAN)) {\r\n      panStart(e.clientX, e.clientY);\r\n      console.log(\"panstart\");\r\n    }\r\n  }\r\n  function panInputEnd() {\r\n    if (panning) {\r\n      if (compareInput(operations.CANVAS.PAN)) {\r\n        panEnd();\r\n      }\r\n    }\r\n  }\r\n\r\n  function zoomInput() {\r\n    if (compareInput(operations.CANVAS.ZOOM_IN)) {\r\n      zoom(SCROLL_ZOOM_MULTIPLIER);\r\n    }\r\n    if (compareInput(operations.CANVAS.ZOOM_OUT)) {\r\n      zoom(-SCROLL_ZOOM_MULTIPLIER);\r\n    }\r\n  }\r\n\r\n  /*   Canvas Transformations   */\r\n  //Send to the Store the combined spring target values for world space calculations.\r\n  $: $canvasTargetTranslation = Vector.addEach(panTarget, {\r\n    x: zoomTarget.x,\r\n    y: zoomTarget.y,\r\n  });\r\n  $: $canvasTargetScale = zoomTarget.s;\r\n\r\n  //Define the target and spring for panning\r\n  let panTarget = { x: 0, y: 0 };\r\n  const panSpring = spring(\r\n    { x: 0, y: 0 },\r\n    {\r\n      stiffness: PAN_STIFFNESS,\r\n      damping: PAN_DAMPING,\r\n      precision: 0.0001,\r\n    }\r\n  );\r\n\r\n  //Define the target and spring for zooming (including offset in the target)\r\n  let zoomTarget = { x: 0, y: 0, s: 1 };\r\n  const zoomSpring = spring(\r\n    { x: 0, y: 0, s: 1 },\r\n    {\r\n      stiffness: ZOOM_STIFFNESS,\r\n      damping: ZOOM_DAMPING,\r\n      precision: 0.0001,\r\n    }\r\n  );\r\n\r\n  //Define the combined spring coordinates to be used by the canvas component's transform property\r\n  let canvasTranslation = { x: 0, y: 0 };\r\n  $: canvasTranslation = { x: $panSpring.x + $zoomSpring.x, y: $panSpring.y + $zoomSpring.y };\r\n  $: canvasZoom = $zoomSpring.s;\r\n  $: $canvasCurrentScale = canvasZoom;\r\n  $: $canvasCurrentTranslation = canvasTranslation;\r\n\r\n  //Movement Functions\r\n  let panning = false;\r\n  function pan(dx: number, dy: number) {\r\n    panTarget.x = panTarget.x + dx / devicePixelRatio;\r\n    panTarget.y = panTarget.y + dy / devicePixelRatio;\r\n    panSpring.update(($panSpring) => panTarget);\r\n  }\r\n  function panStart(cx: number, cy: number) {\r\n    panning = true;\r\n  }\r\n  function panEnd() {\r\n    panning = false;\r\n  }\r\n  function offsetZoom(dx: number, dy: number) {\r\n    zoomTarget.x = zoomTarget.x + dx;\r\n    zoomTarget.y = zoomTarget.y + dy;\r\n    zoomSpring.update(($zoomSpring) => zoomTarget);\r\n  }\r\n  function zoom(ds: number) {\r\n    zoomTarget.s = zoomTarget.s + ds * zoomTarget.s * 0.1;\r\n    zoomSpring.update(($zoomSpring) => zoomTarget);\r\n  }\r\n</script>\r\n\r\n<div id=\"canvas\" on:mousedown={canvasMouseDown} on:wheel={canvasMouseWheel}>\r\n  <div id=\"background\" on:mousedown={backgroundMouseDown} />\r\n\r\n  <BoxSelection bind:this={boxSelection} />\r\n\r\n  <Selection />\r\n\r\n  <div\r\n    id=\"contents\"\r\n    style=\"transform: translate({canvasTranslation.x}px,{canvasTranslation.y}px)scale({canvasZoom},{canvasZoom})\"\r\n  >\r\n    {#each $canvasItems as item, index}\r\n      <CanvasItem itemId={item.id} itemIndex={index} on:clearselection={clearSelection}>\r\n        <svelte:component this={item.component} />\r\n      </CanvasItem>\r\n    {/each}\r\n    <!--<p>yo this is a test</p>jj\r\n    <p>yo this is a test</p>\r\n    <img class=\"selectable\" src=\"https://pbs.twimg.com/profile_images/1121395911849062400/7exmJEg4.png\" alt=\"test\" />-->\r\n  </div>\r\n</div>\r\n\r\n<style>\r\n  #canvas {\r\n    position: fixed;\r\n    width: 100%;\r\n    height: 100%;\r\n  }\r\n  #background {\r\n    position: fixed; /* could be absolute as well */\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: lightgray;\r\n  }\r\n  #contents {\r\n    position: absolute;\r\n    left: 0;\r\n    top: 0;\r\n    transform-origin: top left;\r\n    /* transform: translateX(var(--translateX)); */\r\n    /*pointer-events: none;*/\r\n    user-select: none;\r\n    background-color: white;\r\n  }\r\n  p {\r\n    position: relative;\r\n    align-self: center;\r\n    left: 50%;\r\n  }\r\n  img {\r\n    position: relative;\r\n  }\r\n</style>\r\n","import App from './App.svelte';\r\nconst app = new App({\r\n    target: document.body\r\n});\r\nexport default app;\r\n"],"names":["noop","run","fn","blank_object","Object","create","run_all","fns","forEach","is_function","thing","safe_not_equal","a","b","subscribe","store","callbacks","unsub","unsubscribe","get_store_value","value","_","component_subscribe","component","callback","$$","on_destroy","push","get_slot_context","definition","ctx","$$scope","tar","src","k","assign","slice","update_slot","slot","slot_definition","dirty","get_slot_changes_fn","get_slot_context_fn","slot_changes","lets","undefined","merged","len","Math","max","length","i","get_slot_changes","slot_context","p","null_to_empty","set_store_value","ret","set","is_client","window","now","performance","Date","raf","cb","requestAnimationFrame","tasks","Set","run_tasks","task","c","delete","f","size","append","target","node","appendChild","insert","anchor","insertBefore","detach","parentNode","removeChild","element","name","document","createElement","svg_element","createElementNS","text","data","createTextNode","space","listen","event","handler","options","addEventListener","removeEventListener","prevent_default","preventDefault","call","this","attr","attribute","removeAttribute","getAttribute","setAttribute","set_style","key","important","style","setProperty","current_component","set_current_component","createEventDispatcher","Error","get_current_component","type","detail","e","createEvent","initCustomEvent","custom_event","bubble","dirty_components","binding_callbacks","render_callbacks","flush_callbacks","resolved_promise","Promise","resolve","update_scheduled","add_render_callback","flushing","seen_callbacks","flush","update","pop","has","add","clear","fragment","before_update","after_update","outroing","outros","group_outros","r","check_outros","transition_in","block","local","transition_out","o","d","create_component","mount_component","on_mount","m","new_on_destroy","map","filter","destroy_component","detaching","make_dirty","then","fill","init","instance","create_fragment","not_equal","props","parent_component","bound","context","Map","skip_bound","ready","rest","hydrate","nodes","Array","from","childNodes","children","l","intro","SvelteComponent","[object Object]","$destroy","index","indexOf","splice","$$props","obj","$$set","keys","subscriber_queue","writable","start","stop","subscribers","new_value","run_queue","s","invalidate","subscriber","is_date","prototype","toString","tick_spring","last_value","current_value","target_value","delta","velocity","dt","opts","stiffness","damping","inv_mass","abs","precision","settled","getTime","isArray","next_value","spring","last_time","current_token","inv_mass_recovery_rate","cancel_task","token","hard","soft","rate","promise","fulfill","loop","min","fulfil","canvasTargetTranslation","x","y","canvasTargetScale","canvasCurrentScale","canvasCurrentTranslation","CanvasItem","id","position","scale","CanvasImage","inSelectionRange","selected","canvasItems","activeInput","operations","SELECT","SELECT_ADDITIVE","MOVE","BOX_SELECT","BOX_SELECT_ADDITIVE","PAN","ZOOM_IN","ZOOM_OUT","SAVE","ALIGN_TOP","Mapping","operation","input","onDown","onUp","func","mappings","screenToWorld","screenX","screenY","customX","customY","customScale","canvas","canvasTargetTranslationValue","canvasTargetScaleValue","get","offset","getCanvasValues","worldToScreen","worldX","worldY","Vector","vector1","vector2","vector","multiplier","divisor","sqrt","pow","overlappingRect","rect1","rect2","overlap","right","left","bottom","top","mouseButtonMap","pushInput","includes","spliceInput","compareInput","operationMappings","mapping","find","error","console","warn","shortcutUp","shortcuts","startsWith","processKey","processedKey","toLowerCase","clearSelection","item","u","visibility","selecting","dragBoxSelection","cx","cy","additive","currentToWorld","square","corner1","corner2","width","height","squareNormalization","$canvasItems","DOMRect","compareSelection","endBoxSelection","scaleScreen","positionScreen","$canvasCurrentTranslation","$canvasCurrentScale","multiplyBoth","clientX","clientY","boxSelectMouseMove","startBoxSelection","initialScale","visible","bounds","positionMultiplier","TOP_LEFT","TOP_RIGHT","BOTTOM_LEFT","BOTTOM_RIGHT","scaleMultiplier","scalePoints","scaling","scalePoint","scaleMouseDown","point","button","currentCanvasItems","selectedItems","sort","rightSort","bottomSort","bottomRight","topLeft","difference","worldMovement","movementX","movementY","positionChange","multiplyEach","scaleChange","divideEach","selectionScaleProportion","log","proportionalPosition","proportionalScale","addEach","slot_ctx","itemId","itemIndex","divclass","canvasZoom","selectPressed","selectAdditivePressed","movePressed","dragging","dragStart","selectInputUp","canvasItem","subtractEach","getLength","dx","dy","transformVector","dragItems","devicePixelRatio","iterations","windowFocus","boxSelection","panInputStart","panning","panInputEnd","repeat","_a","shortcutDown","panTarget","panSpring","$panSpring","panMouseMove","zoomTarget","zoomSpring","canvasTranslation","zoom","ds","$zoomSpring","$canvasTargetTranslation","$canvasTargetScale","backgroundStartBoxSelection","num","deltaY","clientInit","zoomInput","clientNow","change","body"],"mappings":"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"}